// 卡塔兰数
// 时间复杂度 : O(n)，其中 n 表示二叉搜索树的节点个数。我们只需要循环遍历一次即可。
// 空间复杂度 : O(1)。我们只需要常数空间存放若干变量。
const numTrees = n => {
  let C = 1;
  for (let i = 0; i < n; i++) {
    C = C * 2 * (2 * i + 1) / (2 + i);
  }
  return C;
 };